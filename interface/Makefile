#############################################################################
# Makefile for building: interface
# Generated by qmake (2.01a) (Qt 4.8.2) on: Sat Dec 5 10:19:45 2015
# Project:  interface.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile interface.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/arm-linux-gnueabihf -lwiringPi -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		lcd_show.cpp \
		message.cpp \
		vibration.c \
		door.cpp \
		checkmemo.cpp \
		memothread.cpp \
		setting.cpp \
		weatherthread.cpp \
		screensaver.cpp \
		dooropenthread.cpp moc_lcd_show.cpp \
		moc_message.cpp \
		moc_door.cpp \
		moc_checkmemo.cpp \
		moc_memothread.cpp \
		moc_setting.cpp \
		moc_weatherthread.cpp \
		moc_screensaver.cpp \
		moc_dooropenthread.cpp
OBJECTS       = main.o \
		lcd_show.o \
		message.o \
		vibration.o \
		door.o \
		checkmemo.o \
		memothread.o \
		setting.o \
		weatherthread.o \
		screensaver.o \
		dooropenthread.o \
		moc_lcd_show.o \
		moc_message.o \
		moc_door.o \
		moc_checkmemo.o \
		moc_memothread.o \
		moc_setting.o \
		moc_weatherthread.o \
		moc_screensaver.o \
		moc_dooropenthread.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		interface.pro
QMAKE_TARGET  = interface
DESTDIR       = 
TARGET        = interface

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_lcd_show.h ui_message.h ui_door.h ui_checkmemo.h ui_setting.h ui_screensaver.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: interface.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/arm-linux-gnueabihf/libQtGui.prl \
		/usr/lib/arm-linux-gnueabihf/libQtCore.prl
	$(QMAKE) -o Makefile interface.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/arm-linux-gnueabihf/libQtGui.prl:
/usr/lib/arm-linux-gnueabihf/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile interface.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/interface1.0.0 || $(MKDIR) .tmp/interface1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/interface1.0.0/ && $(COPY_FILE) --parents lcd_show.h message.h vibration.h door.h checkmemo.h memothread.h setting.h weatherthread.h screensaver.h dooropenthread.h .tmp/interface1.0.0/ && $(COPY_FILE) --parents main.cpp lcd_show.cpp message.cpp vibration.c door.cpp checkmemo.cpp memothread.cpp setting.cpp weatherthread.cpp screensaver.cpp dooropenthread.cpp .tmp/interface1.0.0/ && $(COPY_FILE) --parents lcd_show.ui message.ui door.ui checkmemo.ui setting.ui screensaver.ui .tmp/interface1.0.0/ && (cd `dirname .tmp/interface1.0.0` && $(TAR) interface1.0.0.tar interface1.0.0 && $(COMPRESS) interface1.0.0.tar) && $(MOVE) `dirname .tmp/interface1.0.0`/interface1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/interface1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_lcd_show.cpp moc_message.cpp moc_door.cpp moc_checkmemo.cpp moc_memothread.cpp moc_setting.cpp moc_weatherthread.cpp moc_screensaver.cpp moc_dooropenthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_lcd_show.cpp moc_message.cpp moc_door.cpp moc_checkmemo.cpp moc_memothread.cpp moc_setting.cpp moc_weatherthread.cpp moc_screensaver.cpp moc_dooropenthread.cpp
moc_lcd_show.cpp: message.h \
		door.h \
		checkmemo.h \
		setting.h \
		memothread.h \
		weatherthread.h \
		screensaver.h \
		dooropenthread.h \
		lcd_show.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) lcd_show.h -o moc_lcd_show.cpp

moc_message.cpp: message.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) message.h -o moc_message.cpp

moc_door.cpp: checkmemo.h \
		setting.h \
		door.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) door.h -o moc_door.cpp

moc_checkmemo.cpp: checkmemo.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) checkmemo.h -o moc_checkmemo.cpp

moc_memothread.cpp: memothread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) memothread.h -o moc_memothread.cpp

moc_setting.cpp: setting.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) setting.h -o moc_setting.cpp

moc_weatherthread.cpp: weatherthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) weatherthread.h -o moc_weatherthread.cpp

moc_screensaver.cpp: screensaver.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) screensaver.h -o moc_screensaver.cpp

moc_dooropenthread.cpp: dooropenthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dooropenthread.h -o moc_dooropenthread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_lcd_show.h ui_message.h ui_door.h ui_checkmemo.h ui_setting.h ui_screensaver.h
compiler_uic_clean:
	-$(DEL_FILE) ui_lcd_show.h ui_message.h ui_door.h ui_checkmemo.h ui_setting.h ui_screensaver.h
ui_lcd_show.h: lcd_show.ui
	/usr/bin/uic-qt4 lcd_show.ui -o ui_lcd_show.h

ui_message.h: message.ui
	/usr/bin/uic-qt4 message.ui -o ui_message.h

ui_door.h: door.ui
	/usr/bin/uic-qt4 door.ui -o ui_door.h

ui_checkmemo.h: checkmemo.ui
	/usr/bin/uic-qt4 checkmemo.ui -o ui_checkmemo.h

ui_setting.h: setting.ui
	/usr/bin/uic-qt4 setting.ui -o ui_setting.h

ui_screensaver.h: screensaver.ui
	/usr/bin/uic-qt4 screensaver.ui -o ui_screensaver.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp lcd_show.h \
		message.h \
		door.h \
		checkmemo.h \
		setting.h \
		memothread.h \
		weatherthread.h \
		screensaver.h \
		dooropenthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

lcd_show.o: lcd_show.cpp lcd_show.h \
		message.h \
		door.h \
		checkmemo.h \
		setting.h \
		memothread.h \
		weatherthread.h \
		screensaver.h \
		dooropenthread.h \
		ui_lcd_show.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lcd_show.o lcd_show.cpp

message.o: message.cpp message.h \
		ui_message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o message.o message.cpp

vibration.o: vibration.c vibration.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o vibration.o vibration.c

door.o: door.cpp door.h \
		checkmemo.h \
		setting.h \
		ui_door.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o door.o door.cpp

checkmemo.o: checkmemo.cpp checkmemo.h \
		ui_checkmemo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkmemo.o checkmemo.cpp

memothread.o: memothread.cpp memothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o memothread.o memothread.cpp

setting.o: setting.cpp setting.h \
		ui_setting.h \
		door.h \
		checkmemo.h \
		lcd_show.h \
		message.h \
		memothread.h \
		weatherthread.h \
		screensaver.h \
		dooropenthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setting.o setting.cpp

weatherthread.o: weatherthread.cpp weatherthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o weatherthread.o weatherthread.cpp

screensaver.o: screensaver.cpp screensaver.h \
		ui_screensaver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o screensaver.o screensaver.cpp

dooropenthread.o: dooropenthread.cpp dooropenthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dooropenthread.o dooropenthread.cpp

moc_lcd_show.o: moc_lcd_show.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lcd_show.o moc_lcd_show.cpp

moc_message.o: moc_message.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_message.o moc_message.cpp

moc_door.o: moc_door.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_door.o moc_door.cpp

moc_checkmemo.o: moc_checkmemo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_checkmemo.o moc_checkmemo.cpp

moc_memothread.o: moc_memothread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_memothread.o moc_memothread.cpp

moc_setting.o: moc_setting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_setting.o moc_setting.cpp

moc_weatherthread.o: moc_weatherthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_weatherthread.o moc_weatherthread.cpp

moc_screensaver.o: moc_screensaver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_screensaver.o moc_screensaver.cpp

moc_dooropenthread.o: moc_dooropenthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dooropenthread.o moc_dooropenthread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

